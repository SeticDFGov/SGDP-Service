// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace demanda_service.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250926012059_Export property")]
    partial class Exportproperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Etapa", b =>
                {
                    b.Property<int>("EtapaProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EtapaProjetoId"));

                    b.Property<string>("ANALISE")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DIAS_PREVISTOS")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DT_INICIO_PREVISTO")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DT_INICIO_REAL")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DT_TERMINO_PREVISTO")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DT_TERMINO_REAL")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NM_ETAPA")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("NM_PROJETOprojetoId")
                        .HasColumnType("integer");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PERCENT_EXEC_ETAPA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PERCENT_TOTAL_ETAPA")
                        .HasColumnType("numeric");

                    b.Property<string>("RESPONSAVEL_ETAPA")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("EtapaProjetoId");

                    b.HasIndex("NM_PROJETOprojetoId");

                    b.ToTable("Etapas");
                });

            modelBuilder.Entity("Models.AreaDemandante", b =>
                {
                    b.Property<int>("AreaDemandanteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AreaDemandanteID"));

                    b.Property<string>("NM_DEMANDANTE")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NM_SIGLA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("AreaDemandanteID");

                    b.ToTable("AreaDemandantes");
                });

            modelBuilder.Entity("Models.Atividade", b =>
                {
                    b.Property<int>("AtividadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AtividadeId"));

                    b.Property<Guid>("ExportId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("data_termino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("situacao")
                        .HasColumnType("integer");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AtividadeId");

                    b.HasIndex("ExportId");

                    b.HasIndex("ReportId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Models.Demanda", b =>
                {
                    b.Property<int>("DemandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DemandaId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DT_ABERTURA")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DT_CONCLUSAO")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DT_SOLICITACAO")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NM_AREA_DEMANDANTEAreaDemandanteID")
                        .HasColumnType("integer");

                    b.Property<string>("NM_DEMANDA")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NM_PO_DEMANDANTE")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NM_PO_SUBTDCR")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NR_PROCESSO_SEI")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("PATROCINADOR")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PERIODICIDADE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PERIODICO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UNIDADE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("DemandaId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("NM_AREA_DEMANDANTEAreaDemandanteID");

                    b.ToTable("Demandas");
                });

            modelBuilder.Entity("Models.Despacho", b =>
                {
                    b.Property<Guid>("DespachoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeOrgao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("projetoId")
                        .HasColumnType("integer");

                    b.HasKey("DespachoId");

                    b.HasIndex("projetoId");

                    b.ToTable("Despachos");
                });

            modelBuilder.Entity("Models.Detalhamento", b =>
                {
                    b.Property<int>("detalheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("detalheId"));

                    b.Property<string>("DETALHAMENTO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DemandaId")
                        .HasColumnType("integer");

                    b.HasKey("detalheId");

                    b.HasIndex("DemandaId");

                    b.ToTable("Detalhamentos");
                });

            modelBuilder.Entity("Models.Esteira", b =>
                {
                    b.Property<Guid>("EsteiraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("EsteiraId");

                    b.ToTable("Esteiras");
                });

            modelBuilder.Entity("Models.Export", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data_criacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Data_fim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NM_PROJETOprojetoId")
                        .HasColumnType("integer");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("fase")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("NM_PROJETOprojetoId");

                    b.ToTable("Exports");
                });

            modelBuilder.Entity("Models.Projeto", b =>
                {
                    b.Property<int>("projetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("projetoId"));

                    b.Property<string>("ANO")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("AREA_DEMANDANTEAreaDemandanteID")
                        .HasColumnType("integer");

                    b.Property<Guid?>("EsteiraId")
                        .HasColumnType("uuid");

                    b.Property<string>("GERENTE_PROJETO")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("NM_PROJETO")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NR_PROCESSO_SEI")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<bool?>("PDTIC2427")
                        .HasColumnType("boolean");

                    b.Property<bool?>("PROFISCOII")
                        .HasColumnType("boolean");

                    b.Property<bool?>("PTD2427")
                        .HasColumnType("boolean");

                    b.Property<string>("SITUACAO")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("TEMPLATE")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid?>("Unidadeid")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("valorEstimado")
                        .HasColumnType("numeric");

                    b.HasKey("projetoId");

                    b.HasIndex("AREA_DEMANDANTEAreaDemandanteID");

                    b.HasIndex("EsteiraId");

                    b.HasIndex("Unidadeid");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("Data_criacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Data_fim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NM_PROJETOprojetoId")
                        .HasColumnType("integer");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("fase")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ReportId");

                    b.HasIndex("NM_PROJETOprojetoId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Models.Template", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TemplateId"));

                    b.Property<int>("DIAS_PREVISTOS")
                        .HasColumnType("integer");

                    b.Property<string>("NM_ETAPA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NM_TEMPLATE")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int>("ORDER")
                        .HasColumnType("integer");

                    b.Property<decimal>("PERCENT_TOTAL")
                        .HasMaxLength(100)
                        .HasColumnType("numeric");

                    b.HasKey("TemplateId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("app.Models.Unidade", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("app.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("Unidadeid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Unidadeid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Etapa", b =>
                {
                    b.HasOne("Models.Projeto", "NM_PROJETO")
                        .WithMany()
                        .HasForeignKey("NM_PROJETOprojetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NM_PROJETO");
                });

            modelBuilder.Entity("Models.Atividade", b =>
                {
                    b.HasOne("Models.Export", "Export")
                        .WithMany("Atividades")
                        .HasForeignKey("ExportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Report", "Report")
                        .WithMany("Atividades")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Export");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Models.Demanda", b =>
                {
                    b.HasOne("Models.Categoria", "CATEGORIA")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.AreaDemandante", "NM_AREA_DEMANDANTE")
                        .WithMany()
                        .HasForeignKey("NM_AREA_DEMANDANTEAreaDemandanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CATEGORIA");

                    b.Navigation("NM_AREA_DEMANDANTE");
                });

            modelBuilder.Entity("Models.Despacho", b =>
                {
                    b.HasOne("Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("projetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Models.Detalhamento", b =>
                {
                    b.HasOne("Models.Demanda", "DEMANDA")
                        .WithMany()
                        .HasForeignKey("DemandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DEMANDA");
                });

            modelBuilder.Entity("Models.Export", b =>
                {
                    b.HasOne("Models.Projeto", "NM_PROJETO")
                        .WithMany()
                        .HasForeignKey("NM_PROJETOprojetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NM_PROJETO");
                });

            modelBuilder.Entity("Models.Projeto", b =>
                {
                    b.HasOne("Models.AreaDemandante", "AREA_DEMANDANTE")
                        .WithMany()
                        .HasForeignKey("AREA_DEMANDANTEAreaDemandanteID");

                    b.HasOne("Models.Esteira", "Esteira")
                        .WithMany()
                        .HasForeignKey("EsteiraId");

                    b.HasOne("app.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("Unidadeid");

                    b.Navigation("AREA_DEMANDANTE");

                    b.Navigation("Esteira");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Models.Report", b =>
                {
                    b.HasOne("Models.Projeto", "NM_PROJETO")
                        .WithMany()
                        .HasForeignKey("NM_PROJETOprojetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NM_PROJETO");
                });

            modelBuilder.Entity("app.Models.User", b =>
                {
                    b.HasOne("app.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("Unidadeid");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Models.Export", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("Models.Report", b =>
                {
                    b.Navigation("Atividades");
                });
#pragma warning restore 612, 618
        }
    }
}
